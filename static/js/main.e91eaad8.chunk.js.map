{"version":3,"sources":["components/AddNote.js","components/Edit.js","components/Note.js","components/NotesList.js","components/SearchBar.js","App.js","index.js"],"names":["AddNote","defaultValue","onBlur","handleAddNote","useState","noteText","setNoteText","className","autoFocus","onFocus","e","value","target","rows","cols","placeholder","onChange","event","length","onClick","trim","Edit","id","handleEditNote","text","type","Note","date","handleDeleteNote","isEditing","size","NotesList","notes","onNoteClick","map","note","SearchBar","handleSearchNote","App","uuid","setNotes","searchText","setSearchText","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLocaleLowerCase","includes","solidNotes","Date","newNotes","toLocaleDateString","filteredNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e91eaad8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddNote = ({ defaultValue = '', onBlur, handleAddNote }) => {\r\n  const [noteText, setNoteText] = useState(defaultValue);\r\n  const charLimit = 400;\r\n\r\n  const handleChange = (event) => {\r\n    if (charLimit - event.target.value.length >= 0) {\r\n      setNoteText(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSaveClick = (e) => {\r\n    if (noteText.trim().length > 0) {\r\n      if (defaultValue !== '') {\r\n        onBlur(e);\r\n      } else {\r\n        handleAddNote(noteText);\r\n        setNoteText('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const moveCursorAtEnd = (e) => {\r\n    const value = e.target.value;\r\n    e.target.value = '';\r\n    e.target.value = value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"note new\" onBlur={onBlur}>\r\n      <textarea\r\n        autoFocus={true}\r\n        onFocus={moveCursorAtEnd}\r\n        rows=\"8\"\r\n        cols=\"10\"\r\n        placeholder=\"Type to add a note...\"\r\n        value={noteText}\r\n        onChange={handleChange}\r\n      ></textarea>\r\n      <div className=\"note-footer\">\r\n        <small>{charLimit - noteText.length} remaining</small>\r\n        <button className=\"save-button\" onClick={handleSaveClick}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNote;\r\n","import React from 'react';\r\nimport AddNote from './AddNote';\r\n\r\nconst Edit = ({ id, handleEditNote, text }) => {\r\n  const finishedEdit = (e) => {\r\n    const text = e.target.value;\r\n    if (handleEditNote) {\r\n      handleEditNote(id, text);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AddNote type=\"text\" defaultValue={text} onBlur={finishedEdit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","import React from 'react';\r\nimport { MdDeleteForever } from 'react-icons/md';\r\nimport Edit from './Edit';\r\n\r\nconst Note = ({\r\n  id,\r\n  text,\r\n  date,\r\n  handleDeleteNote,\r\n  handleEditNote,\r\n  isEditing,\r\n  onClick,\r\n}) => {\r\n  if (isEditing) {\r\n    return <Edit id={id} text={text} handleEditNote={handleEditNote} />;\r\n  }\r\n  return (\r\n    <div className=\"note\" onClick={onClick}>\r\n      <span>{text}</span>\r\n      <div className=\"note-footer\">\r\n        <small>{date}</small>\r\n        <MdDeleteForever\r\n          className=\"delete-icon\"\r\n          size=\"1.3em\"\r\n          onClick={() => handleDeleteNote(id)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from 'react';\r\nimport AddNote from './AddNote';\r\nimport Note from './Note';\r\n\r\nconst NotesList = ({\r\n  notes,\r\n  handleAddNote,\r\n  handleDeleteNote,\r\n  handleEditNote,\r\n  onNoteClick,\r\n}) => {\r\n  return (\r\n    <div className=\"notes-list\">\r\n      <AddNote handleAddNote={handleAddNote} />\r\n      {notes.map((note) => (\r\n        <Note\r\n          key={note.id}\r\n          id={note.id}\r\n          text={note.text}\r\n          date={note.date}\r\n          onClick={() => onNoteClick(note.id)}\r\n          isEditing={note.isEditing}\r\n          handleDeleteNote={handleDeleteNote}\r\n          handleEditNote={handleEditNote}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesList;\r\n","import React from 'react';\r\nimport { MdSearch } from 'react-icons/md';\r\n\r\nconst SearchBar = ({ handleSearchNote }) => {\r\n  return (\r\n    <div className='search-bar'>\r\n      <MdSearch className='search-icon' size='1.3em' />\r\n      <input\r\n        type='text'\r\n        placeholder='Search for notes'\r\n        onChange={(event) => handleSearchNote(event.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport NotesList from './components/NotesList';\r\nimport SearchBar from './components/SearchBar';\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([\r\n    {\r\n      id: uuid(),\r\n      text: 'Sample text',\r\n      date: '7/27/2021',\r\n      isEditing: false,\r\n    },\r\n  ]);\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  useEffect(() => {\r\n    const savedNotes = JSON.parse(localStorage.getItem('note-taking-app-data'));\r\n\r\n    if (savedNotes) {\r\n      setNotes(savedNotes);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('note-taking-app-data', JSON.stringify(notes));\r\n  }, [notes]);\r\n\r\n  const addNote = (text) => {\r\n    const date = new Date();\r\n    const newNote = {\r\n      id: uuid(),\r\n      text: text,\r\n      date: date.toLocaleDateString(),\r\n    };\r\n    const newNotes = [newNote, ...notes];\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  const activateNoteEdit = (id) => {\r\n    const solidNotes = notes.map((note) => {\r\n      if (note.id === id) {\r\n        note.isEditing = true;\r\n      }\r\n      return note;\r\n    });\r\n    setNotes(solidNotes);\r\n  };\r\n\r\n  const editNote = (id, text) => {\r\n    const solidNotes = notes.map((note) => {\r\n      if (note.id === id) {\r\n        note.isEditing = false;\r\n        note.text = text;\r\n      }\r\n      return note;\r\n    });\r\n    setNotes(solidNotes);\r\n  };\r\n\r\n  const deleteNote = (id) => {\r\n    const filteredNotes = notes.filter((note) => note.id !== id);\r\n    setNotes(filteredNotes);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Notes</h1>\r\n      <SearchBar handleSearchNote={setSearchText} />\r\n      <NotesList\r\n        notes={notes.filter((note) =>\r\n          note.text.toLocaleLowerCase().includes(searchText)\r\n        )}\r\n        onNoteClick={activateNoteEdit}\r\n        handleAddNote={addNote}\r\n        handleDeleteNote={deleteNote}\r\n        handleEditNote={editNote}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}